#
# <Makefile template>
# Copyright (C) <2013>  Quentin Perez <qperez42@gmail.com>
#
# This file is part of 42-toolkit.
#
# 42-toolkit is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

CC		=	clang
CFLAGS	+=	-Wextra -Wall -Werror -I./
LDFLAGS	+=	-L./ -lft
DEBUG	=	-g3 -fno-inline -DD_ERRORS_ON

LIB		=	libft.a
OBJDIR	=	.objs
LISTDIR	=	

DIRSRC	=	

EXEC	=	a.out

SRC		=	main.c

LIBSRC	=	f_memset.c		\
			f_bzero.c		\
			f_memcpy.c		\
			f_memccpy.c		\
			f_memmove.c		\
			f_memchr.c		\
			f_memcmp.c		\
			f_strlen.c		\
			f_strdup.c		\
			f_strcpy.c		\
			f_strncpy.c		\
			f_strcat.c		\
			f_strncat.c		\
			f_strlcat.c		\
			f_strchr.c		\
			f_strrchr.c		\
			f_strstr.c		\
			f_strnstr.c		\
			f_strcmp.c		\
			f_strncmp.c		\
			f_atoi.c		\
			f_isalpha.c		\
			f_isdigit.c		\
			f_isascii.c		\
			f_isalnum.c		\
			f_isprint.c		\
			f_toupper.c		\
			f_tolower.c		\
			f_memalloc.c	\
			f_memdel.c

OBJ		=	$(addprefix $(OBJDIR)/, $(SRC:.c=.o))
OBJLIB	=	$(addprefix $(OBJDIR)/, $(LIBSRC:.c=.o))

.SILENT:

$(addprefix $(OBJDIR)/, %.o)	:	%.c
								$(CC) $(CFLAGS) -o $@ -c $<
								printf '\033[0;32mBuilding C Object $@\n\033[0m' "Building C Object $@"

$(LIB)	:	$(OBJDIR) $(OBJLIB)
		ar rcs $(LIB) $(OBJLIB)
		printf '\033[1;31m%s \033[1;35m%s \033[1;33m%s\n\033[0m' "C libraries" "$(LIB)" "$(CC)"

test	:	$(OBJDIR) $(LIB) $(OBJ)
		$(CC) $(CFLAGS) -o $(EXEC) $(OBJ) $(LDFLAGS)
		printf '\033[1;31m%s \033[1;35m%s \033[1;33m%s\n\033[0m' "Linking C executable" "$(EXEC)" "$(CC)"


clean	:
		/bin/rm	-fr $(OBJDIR)
		printf '\033[1;34m%s\n\033[0m' "Clean project $(EXEC)"

fclean	:	clean
		/bin/rm -fr $(LIB) $(EXEC)
		printf '\033[1;34m%s\n\033[0m' "Fclean project $(EXEC)"

re		:	fclean all

debug	:	CFLAGS += $(DEBUG)
debug	:	re
		printf '\033[1;31m%s \033[1;35m%s\n\033[0m' "Debug version" "$(DEBUG)"

analyze	:	CFLAGS += --analyze
analyze	:	re

every	:	CFLAGS += -Weverything
every	:	re
		printf '\033[1;33m%s\n\033[0m' "Good job !"

all		:	$(LIB)

$(OBJDIR)	:
		/bin/mkdir $(OBJDIR);			\
		for DIR in $(LISTDIR);			\
		do								\
			/bin/mkdir $(OBJDIR)/$$DIR;	\
		done							\

help	:
		printf '\033[1;34m%s\t\033[0m‚áí %s\n' "clean"	"Cleaning all object"
		printf '\033[1;34m%s\t\033[0m‚áí %s\n' "fclean"	"Cleaning all object and executable"
		printf '\033[1;34m%s\t\033[0m‚áí %s\n' "debug"	"Add debug flags"
		printf '\033[1;34m%s\t\033[0m‚áí %s\n' "re"		"Deleting all object and build"
		printf '\n'
		printf '\033[1;34m%s\t\033[0m‚áí %s\n' "analyze"	"Analyze code but compile nothing"
		printf '\033[1;34m%s\t\033[0m‚áí %s\n' "every"	"God code"

.PHONY:	clean fclean re debug analyze every